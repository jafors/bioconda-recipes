--- ncbi-vdb-2.9.6/setup/konfigure.perl	2019-03-18 17:57:05.000000000 +0100
+++ ncbi-vdb-2.9.6-fixed/setup/konfigure.perl	2019-06-26 11:18:16.762478449 +0200
@@ -325,7 +325,7 @@
     $SHLX = 'so';
     $EXEX = '';
     $OSINC = 'unix';
-    $TOOLS = 'gcc' unless ($TOOLS);
+    $TOOLS = $ENV{'CC'};
 } elsif ($OSTYPE =~ /darwin/i) {
     $LPFX = 'lib';
     $OBJX = 'o';
@@ -353,13 +353,14 @@
 $CPP     = $OPT{CXX    } if ($OPT{CXX    });
 $LDFLAGS = $OPT{LDFLAGS} if ($OPT{LDFLAGS});
 
-if ($TOOLS =~ /gcc$/) {
-    $CPP  = 'g++' unless ($CPP);
-    $CC   = "$TOOLS -c";
+println "TOOLS = $TOOLS";
+if ($TOOLS =~ /cc$/) {
+    $CPP  = $ENV{'CPP'} unless ($CPP);
+    $CC   = $ENV{'CC'} . " -c";
     $CP   = "$CPP -c";
-    $AR   = 'ar rc';
-    $ARX  = 'ar x';
-    $ARLS = 'ar t';
+    $AR   = $ENV{'AR'};
+    $ARX  = "$AR x";
+    $ARLS = "$AR t";
     $LD   = $TOOLS;
     $LP   = $CPP;
 
@@ -446,6 +447,8 @@
     }
 }
 
+println "Done blabla";
+
 my @dependencies;
 
 my %DEPEND_OPTIONS;
@@ -1487,6 +1490,7 @@
 }
 
 sub check_no_array_bounds {
+    println "check_no_array_bounds";
     check_compiler('O', '-Wno-array-bounds');
 }
 
@@ -1498,6 +1502,7 @@
     my ($t, $n, $I, @l) = @_;
     my $tool = $TOOLS;
 
+    println "Running check_compiler with t=$t, n=$n, I=$I, l=@l";
     if ($t eq 'L') {
         print "checking for $n library... ";
     } elsif ($t eq 'O') {
@@ -1515,9 +1520,12 @@
         return;
     }
 
-    while (1) {
+    my $counter = 0;
+    while ($counter < 100) {
         my ($flags, $library, $log) = ('', '');
 
+        $counter = $counter + 1;
+        println "while (1) with counter=$counter";
         if ($t eq 'O') {
             $flags = $n;
             $log = '                      int main() {                     }\n'
@@ -1547,6 +1555,7 @@
             return;
         }
 
+        println "while 01";
         for ( my $i = 0; $i <= $#l; ++ $i ) {
             print "'$l[$i]': " if ($OPT{'debug'});
             if ( $l [ $i ] ) {
@@ -1558,13 +1567,17 @@
                 }
             }
         }
+        println "while 02";
 
         my $cmd = $log;
         $cmd =~ s/\\n/\n/g;
 
+        println "while 03. cmd = $cmd";
         push ( @l, '' ) unless ( @l );
         for my $i ( 0 .. $#l ) {
+            println "  i = $i";
             my $l = $l [ $i ];
+            println "  l = $l";
             if ( $l && ! -d $l ) {
                 if ( $i == $#l ) {
                     println 'no';
@@ -1573,10 +1586,11 @@
                     next;
                 }
             }
+            println "  for 01";
             my $gcc = "| $tool -xc $flags " . ($I ? "-I$I " : ' ')
                                       . ($l ? "-L$l " : ' ') . "- $library";
             $gcc .= ' 2> /dev/null' unless ($OPT{'debug'});
-
+            println "  gcc command: $gcc";
             open GCC, $gcc or last;
             print "\n\t\trunning echo -e '$log' $gcc\n" if ($OPT{'debug'});
             print GCC "$cmd" or last;
